% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doc_join_types.R
\name{join_types}
\alias{join_types}
\title{Types of hierarchical joins}
\value{
\item{left}{return all rows from \code{raw}, and all columns from \code{raw} and \code{ref}.
Rows in \code{raw} with no match in \code{ref} will have NA values in the new columns
taken from \code{ref}. If there are multiple matches between \code{raw} and \code{ref}, all
combinations of the matches are returned.}
\item{inner}{return all rows from \code{raw} where there are matches in \code{ref}, and
all columns from \code{raw} and \code{ref}. If there are multiple matches between \code{raw}
and \code{ref}, all combinations of the matches are returned.}
\item{inner_unique}{similar to "inner", except that any row of \code{raw} with
multiple matches in \code{ref} is considered non-matching and so will not be
returned.}
\item{anti}{return all rows from \code{raw} where there are not matches in \code{ref},
keeping just columns from \code{raw}}
\item{anti_unique}{similar to "anti" except that any row of \code{raw} with
multiple matches in \code{ref} is considered non-matching, and returned as a
single row.}
}
\description{
Join types used in the \code{hmatch} package ("left", "inner", "anti") are
conceptually equivalent to \link{dplyr}'s \code{\link[dplyr]{join}} types.
However, for some functions we also add two new join types ("inner_unique"
and "anti_unique"), which are similar to the parent types except that
"_unique" joins consider rows in \code{raw} with \emph{multiple} matches in \code{ref}
as \emph{non}-matches. That is, a match must be unique to count.
}
