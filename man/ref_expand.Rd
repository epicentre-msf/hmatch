% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ref_expand.R
\name{ref_expand}
\alias{ref_expand}
\title{Expand a reference data.frame containing N hierarchical columns to an N-level
reference data.frame}
\usage{
ref_expand(ref, pattern, by, lowest_level = 1L)
}
\arguments{
\item{ref}{\code{data.frame} containing hierarchical columns with reference data}

\item{pattern}{regex pattern to match the names of the hierarchical columns
in \code{ref} (supply either \code{pattern} \emph{or} \code{by})}

\item{by}{vector giving the names of the hierarchical columns in \code{ref}
(supply either \code{pattern} \emph{or} \code{by})}

\item{lowest_level}{integer representing the lowest-resolution level
(defaults to \code{1})}
}
\value{
A \code{data.frame} created by expanding \code{ref} to all implied hierarchical levels
}
\description{
For example, a municipality-level reference data.frame might contain three
hierarchical columns — country, state, and municipality — but nonetheless
only reflect the municipality level in that all rows represent a unique
municipality. The lower-resolution levels (state, country) are implied but
not explicitly represented as unique rows. If we wish to allow matches to the
lower-resolution levels, we need additional rows specific to these levels.

This function takes a reference data.frame with N hierarchical columns, and
adds rows for each unique combination of each level that is not currently
explicitly represented.
}
\examples{
# subset example reference df to the admin-2 level
ne_ref_adm2 <- ne_ref[!is.na(ne_ref$adm2),]

# expand back to all levels
ref_expand(ne_ref_adm2, pattern = "adm", lowest_level = 0)

}
