% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hmatch_complete.R
\name{hmatch_complete}
\alias{hmatch_complete}
\title{Complete hierarchical matching}
\usage{
hmatch_complete(
  raw,
  ref,
  pattern = NULL,
  pattern_ref = pattern,
  by = NULL,
  by_ref = by,
  type = "left",
  dict = NULL,
  ref_prefix = "ref_",
  std_fn = string_std,
  ...
)
}
\arguments{
\item{raw}{data frame containing hierarchical columns with raw data}

\item{ref}{data frame containing hierarchical columns with reference data}

\item{pattern}{regex pattern to match the hierarchical columns in \code{raw}
(columns can be matched using either \code{pattern} \emph{or} \code{by}, as described in
\link{specifying_columns})}

\item{pattern_ref}{regex pattern to match the hierarchical columns in \code{ref}
(defaults to \code{pattern})}

\item{by}{vector giving the names of the hierarchical columns in \code{raw}}

\item{by_ref}{vector giving the names of the hierarchical columns in \code{ref}
(defaults to \code{by})}

\item{type}{type of join ("left", "inner", "anti", "resolve_left",
"resolve_inner", or "resolve_anti"). Defaults to "left". See
\link{join_types}.}

\item{dict}{optional dictionary for recoding values within the hierarchical
columns of \code{raw} (see \link{dictionary_recoding})}

\item{ref_prefix}{prefix to add to hierarchical column names in \code{ref} if they
are otherwise identical to names in \code{raw}  (defaults to "ref_")}

\item{std_fn}{function to standardize strings during matching. Defaults to
\code{\link{string_std}}. Set to \code{NULL} to omit standardization. See
also \link{string_standardization}.}

\item{...}{additional arguments passed to \code{std_fn()}}
}
\value{
a data frame obtained by matching the hierarchical columns in \code{raw}
and \code{ref}, using the join type specified by argument \code{type} (see
\link{join_types} for more details)
}
\description{
Match a data frame with raw, potentially messy hierarchical data (e.g.
province, county, township) against a reference dataset, using complete
matching. "Complete" here means that every level must match in sequence. For
example, given raw data with known levels of county and township, but missing
the lower-resolution level province, a match will not be made.
}
\examples{
data(ne_raw)
data(ne_ref)

hmatch_complete(ne_raw, ne_ref, pattern = "^adm", type = "inner")

# with dictionary-based recoding
ne_dict <- data.frame(value = "USA",
                      replacement = "United States",
                      variable = "adm0")

hmatch_complete(ne_raw, ne_ref, pattern = "^adm", dict = ne_dict, type = "inner")

}
